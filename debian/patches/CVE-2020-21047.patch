From 99dc63b10b3878616b85df2dfd2e4e7103e414b8 Mon Sep 17 00:00:00 2001
From: Mark Wielaard <mark@klomp.org>
Date: Sat, 19 Oct 2019 14:01:30 +0200
Subject: [PATCH] libcpu: Fix bounds checks and replace asserts with errors.

Add a missing bounds check, fix an off-by-one bounds check and replace
asserts with error messages.

https://sourceware.org/bugzilla/show_bug.cgi?id=25068

Signed-off-by: Mark Wielaard <mark@klomp.org>
---
 libcpu/i386_data.h   |  2 +-
 libcpu/i386_disasm.c | 12 ++++++++----
 3 files changed, 17 insertions(+), 5 deletions(-)

Index: elfutils-0.159/libcpu/i386_data.h
===================================================================
--- elfutils-0.159.orig/libcpu/i386_data.h	2023-09-23 19:45:46.527223075 +0200
+++ elfutils-0.159/libcpu/i386_data.h	2023-09-23 19:45:46.527223075 +0200
@@ -1336,7 +1336,7 @@
 {
   assert (d->opoff1 % 8 == 0);
   assert (d->opoff1 / 8 == 5);
-  if (*d->param_start + 2 > d->end)
+  if (*d->param_start + 2 >= d->end)
     return -1;
   *d->param_start += 2;
   uint16_t absval = read_2ubyte_unaligned (&d->data[5]);
Index: elfutils-0.159/libcpu/i386_disasm.c
===================================================================
--- elfutils-0.159.orig/libcpu/i386_disasm.c	2023-09-23 19:45:46.527223075 +0200
+++ elfutils-0.159/libcpu/i386_disasm.c	2023-09-23 19:47:59.919222670 +0200
@@ -610,7 +610,9 @@
 
 		  /* Account for displacement.  */
 		  if ((modrm & 0xc7) == 5 || (modrm & 0xc0) == 0x80
-		      || ((modrm & 0xc7) == 0x4 && (codep[0] & 0x7) == 0x5))
+		      || ((modrm & 0xc7) == 0x4
+			  && param_start < end
+			  && (codep[0] & 0x7) == 0x5))
 		    param_start += 4;
 		  else if ((modrm & 0xc0) == 0x40)
 		    param_start += 1;
@@ -821,8 +823,8 @@
 			    }
 
 			default:
-			  assert (! "INVALID not handled");
-			  abort ();
+                          str = "INVALID not handled";
+                          break;
 			}
 		    }
 		  else
@@ -1125,8 +1127,9 @@
       /* Invalid (or at least unhandled) opcode.  */
       if (prefixes != 0)
 	goto print_prefix;
-      assert (*startp == data);
-      ++data;
+      /* Make sure we get past the unrecognized opcode if we haven't yet.  */
+      if (*startp == data)
+	++data;
       ADD_STRING ("(bad)");
       addr += data - begin;
 
